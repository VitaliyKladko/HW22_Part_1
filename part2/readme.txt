Я обнаружил следующие запахи плохого кода:
1)	Нарушены правила инкапсуляции, свойства всех классов являются публичными;
2)	В файле base_storage.py в методе add, используется метод get_free_space, его можно сделать protected; (нарушение привил инкапсуляции);
3)	Отсутствует базовое описание методов класса BaseStorage (это не является плохим запахом, но, на мой взгляд было бы правильным это добавить);
4)	В классе Request, чтобы не делать на все свойства геттеры и сеттеры, можно использовать @property в качестве обращения к свойствам класса;
В целом работа выполнена на мой взгляд хорошо, использован принцип наследования, создан AbstractStorage в качестве основы для базового класса, методы названы корректно и описывают свое назначение, в классах отсутствует спагетти-код и методы принимают не более 3-х аргументов.
Классы посредники, завистливые функции, цепочки вызовов, ленивые класса, мертвый код – отсутствуют.
Возможно, я чего-то еще не понимаю, но мне лично придраться больше не к чему.

Ссылка на Git: https://github.com/virvira/homework_lesson_21.git